import java.util.*;
public class Solution {

    public static void combinationSumUtil(List<List<Integer>> result ,int index,int[] candidates, int target, ArrayList<Integer> comb) {
        
    	if(index==candidates.length) {
    		if(target==0) {
    			result.add(new ArrayList<>(comb));
    		}
    		return;
    	}
    	else if(candidates[index]<=target){
    		comb.add(candidates[index]);
    		combinationSumUtil(result,index+1,candidates,target-candidates[index],comb);
    		comb.remove(comb.size()-1);
    	}
    		
    	combinationSumUtil(result,index+1,candidates,target,comb);
    }
    public static List<List<Integer>> combinationSum(int[] candidates, int target) {
        
    	List<List<Integer>> result = new ArrayList<List<Integer>>();
    	
    	combinationSumUtil(result,0,candidates,target,new ArrayList<Integer>());
    	
    	return result;
    }
	public static void main(String[] args) {
		
		int candidates[]= {2,5,2,1,2};
		int target = 5;
		
		System.out.println(combinationSum(candidates, target));
	}

}
