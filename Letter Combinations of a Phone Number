// O(3^N*4^M)
//where N is the 
//number of digits in the input that maps to 3 letters and M is the number of digits in the input that maps to 4 letters, N+M is the total number digits in the input.
import java.util.*;
public class Ritendra {

	public static void guessAll(StringBuilder build,String input, int index ,HashMap<Character, String> map,List<String> ans){
		
		if(index==input.length()) {
			ans.add(build.toString());
			return;
		}
		
		String temp = map.get(input.charAt(index));
		
		for(int k=0;k<temp.length();k++) {
			build.append(temp.charAt(k));
			guessAll(build,input,index+1,map,ans);
			build.deleteCharAt(build.length()-1);
		}
	}
    public static List<String> letterCombinations(String digits) {
       
    	
    	if(digits.length()==0)
    		return new ArrayList<String>();
    	
    	List<String> ans = new ArrayList<String>();
    	
    	HashMap<Character,String> map = new HashMap<Character,String>();
    	map.put('1', "");
    	map.put('0', "");
    	map.put('2', "abc");
    	map.put('3', "def");
    	map.put('4', "ghi");
    	map.put('5', "jkl");
    	map.put('6', "mno");
    	map.put('7', "pqrs");
    	map.put('8', "tuv");
    	map.put('9', "wxyz");
    	
    	StringBuilder build = new StringBuilder();
    	guessAll(build,digits,0,map,ans);
    	
    	return ans;
    }
	public static void main(String[] args) {

		System.out.println(letterCombinations(""));
	}

}
